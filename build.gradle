// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.0"
    repositories {
        google()
        jcenter()
        //Sophix热修复 EMAS
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        //https://emas.console.aliyun.com/?spm=5176.12818093.nav-right.1.488716d0pjkhrH#/productList
        // 添加emas-services插件
        classpath 'com.aliyun.ams:emas-services:1.0.1'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        //flutter官方maven仓库地址
        maven {
            url 'http://download.flutter.io'
        }
        //本地maven仓库地址
        maven {
            url '../../flutter_module/.android/repo-local'
        }
        maven {
            url '../../flutter_module/.android/repo-local-snapshot'
        }
        //远程maven仓库地址
        maven {
            url 'http://nexus.skio.cn/repository/flutter/'
        }
        maven {
            url 'http://nexus.skio.cn/repository/flutter-snapshot/'
        }
        //Sophix热修复 EMAS
        maven {
            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'
        }
    }
    parseLocalProperties()
}

def parseLocalProperties() {
    File file = rootProject.file('local.properties')
    if (file.exists()) {
        Properties properties = new Properties()
        properties.load(rootProject.file('local.properties').newDataInputStream())
        boolean isFlutterMode = Boolean.valueOf(properties.getProperty('FlutterMode'))
        ext.isFlutterMode = isFlutterMode
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}